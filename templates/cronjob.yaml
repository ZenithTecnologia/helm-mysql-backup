{{- if ne .Values.schedule "now" -}}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ template "mysqldump.fullname" . }}
  labels:
{{ include "mysqldump.labels" . | indent 4 }}
spec:
  schedule: "{{ .Values.schedule }}"
  successfulJobsHistoryLimit: {{ .Values.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.failedJobsHistoryLimit }}
  concurrencyPolicy: Forbid
  jobTemplate:
    metadata:
      labels:
        app: {{ template "mysqldump.name" . }}
        chart: {{ template "mysqldump.chart" . }}
        cronjob-name: {{ template "mysqldump.fullname" . }}
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      backoffLimit: 1
      template:
        spec:
          {{- if .Values.securityContext.enabled }}
          securityContext:
            fsGroup: {{ .Values.securityContext.fsGroup }}
            runAsUser: {{ .Values.securityContext.runAsUser }}
          {{- end }}
          containers:
          - name: mysql-backup
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
            imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
            env:
              - name: RUN_ONCE
                value: true
              {{- if .Values.mysql.existingSecret }}
              - name: MYSQL_PWD
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.mysql.existingSecret | quote }}
                    {{- if .Values.mysql.existingSecretKey }}
                    key: {{ .Values.mysql.existingSecretKey | quote }}
                    {{- else }}
                    key: "mysql-root-password"
                    {{- end }}
              {{- end }}
            volumeMounts:
              - name: backups
                mountPath: /backup
                {{- if .Values.persistence.subPath }}
                subPath: {{ .Values.persistence.subPath }}
                {{- end }}
              - name: mysql-backup-script
                mountPath: /scripts
            resources:
        {{ toYaml .Values.resources | indent 12 }}
        {{- with .Values.nodeSelector }}
          nodeSelector:
        {{ toYaml . | indent 8 }}
        {{- end }}
        {{- with .Values.affinity }}
          affinity:
        {{ toYaml . | indent 8 }}
        {{- end }}
        {{- with .Values.tolerations }}
          tolerations:
        {{ toYaml . | indent 8 }}
        {{- end }}
          restartPolicy: Never
          volumes:
          - name: backups
 